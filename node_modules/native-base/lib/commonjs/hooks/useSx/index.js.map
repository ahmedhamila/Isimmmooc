{"version":3,"sources":["index.ts"],"names":["useSx","isSSR","theme","Sx","query","StableHashQuery","checkWarning","console","warn","_style","_restProps","styleFromProps"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA;;;;AADA;AAIO,MAAMA,KAAK,GAAG,MAAM;AACzB,QAAMC,KAAK,GAAG,4CAAoB,4BAApB,EAAkDA,KAAhE;AACA,QAAMC,KAAK,GAAG,yBAAd;;AACA,QAAMC,EAAE,GAAIC,KAAD,IAAwB;AACjC,UAAMC,eAAe,GAAG,yBAAWD,KAAX,CAAxB;AACA,UAAME,YAAY,GAAG,oBAAQ,MAAM;AACjC,aAAO,gCAAoBF,KAApB,EAA2BF,KAA3B,CAAP,CADiC,CAEjC;AACD,KAHoB,EAGlB,CAACG,eAAD,CAHkB,CAArB;;AAKA,QAAIJ,KAAK,IAAIK,YAAb,EAA2B;AACzBC,MAAAA,OAAO,CAACC,IAAR,CAAa,qDAAb;AACD,KATgC,CAUjC;;;AACA,UAAM,CAACC,MAAD,EAASC,UAAT,EAAqBC,cAArB,IAAuC,gEAC3CP,KAD2C,CAA7C;AAIA,WAAOO,cAAP;AACD,GAhBD;;AAiBA,SAAOR,EAAP;AACD,CArBM","sourcesContent":["import { useStyledSystemPropsResolver } from '../useStyledSystemPropsResolver';\nimport { useNativeBaseConfig } from '../../core/NativeBaseContext';\nimport { isResponsiveAnyProp } from '../../theme/tools';\nimport { useTheme } from '../useTheme';\nimport { useMemo } from 'react';\n//@ts-ignore\nimport stableHash from 'stable-hash';\nimport type { StyledProps } from '../../theme/types';\n\nexport const useSx = () => {\n  const isSSR = useNativeBaseConfig('useBreakpointResolvedProps').isSSR;\n  const theme = useTheme();\n  const Sx = (query: StyledProps) => {\n    const StableHashQuery = stableHash(query);\n    const checkWarning = useMemo(() => {\n      return isResponsiveAnyProp(query, theme);\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [StableHashQuery]);\n\n    if (isSSR && checkWarning) {\n      console.warn(\"useSx prop doesn't resolve responsive prop with SSR\");\n    }\n    // eslint-disable-next-line\n    const [_style, _restProps, styleFromProps] = useStyledSystemPropsResolver(\n      query\n    );\n\n    return styleFromProps;\n  };\n  return Sx;\n};\n"]}