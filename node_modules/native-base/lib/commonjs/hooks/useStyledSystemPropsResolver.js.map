{"version":3,"sources":["useStyledSystemPropsResolver.ts"],"names":["useStyledSystemPropsResolver","style","propStyle","debug","props","theme","currentBreakpoint","config","strictMode","getResponsiveStyles","styledSystemProps","restProps","dataSet","styleFromProps","React","useMemo","styleSheet","box","process","env","NODE_ENV","console","log"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;;;AADA;AAGO,MAAMA,4BAA4B,GAAG,CAAC;AAC3CC,EAAAA,KAAK,EAAEC,SADoC;AAE3CC,EAAAA,KAF2C;AAG3C,KAAGC;AAHwC,CAAD,KAIjC;AACT,QAAMC,KAAK,GAAG,yBAAd;AACA,QAAM;AAAEC,IAAAA,iBAAF;AAAqBC,IAAAA;AAArB,MAAgC,4CACpC,qBADoC,CAAtC;AAGA,QAAMC,UAAU,GAAGD,MAAM,CAACC,UAA1B;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAA0B,6CAAhC;AAEA,QAAM;AAAEC,IAAAA,iBAAF;AAAqBC,IAAAA;AAArB,MAAmC,wEACvCP,KADuC,CAAzC;;AAIA,QAAM;AAAEH,IAAAA,KAAF;AAASW,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,MAAqCC,eAAMC,OAAN,CAAc,MAAM;AAC7D,UAAM;AAAEC,MAAAA,UAAF;AAAcJ,MAAAA,OAAd;AAAuBC,MAAAA;AAAvB,QAA0C,4CAAyB;AACvEH,MAAAA,iBADuE;AAEvEL,MAAAA,KAFuE;AAGvEF,MAAAA,KAHuE;AAIvEG,MAAAA,iBAJuE;AAKvEE,MAAAA,UALuE;AAMvEC,MAAAA;AANuE,KAAzB,CAAhD;;AAQA,QAAIP,SAAJ,EAAe;AACb,aAAO;AAAED,QAAAA,KAAK,EAAE,CAACe,UAAU,CAACC,GAAZ,EAAiBf,SAAjB,CAAT;AAAsCU,QAAAA,OAAtC;AAA+CC,QAAAA;AAA/C,OAAP;AACD,KAFD,MAEO;AACL,aAAO;AAAEZ,QAAAA,KAAK,EAAEe,UAAU,CAACC,GAApB;AAAyBL,QAAAA,OAAzB;AAAkCC,QAAAA;AAAlC,OAAP;AACD,KAb4D,CAc7D;;AACD,GAf0C,EAexC,CACD;AACA,2BAAWH,iBAAX,CAFC,EAGDL,KAHC,EAIDF,KAJC,EAKDG,iBALC,EAMDE,UANC,EAODN,SAPC,EAQDO,mBARC,EASDL,KATC,CAfwC,CAA3C;;AA0BA,MAAIc,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,IAA0CjB,KAA9C,EAAqD;AACnD;AACAkB,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BhB,iBAA9B;AACD;;AAEDK,EAAAA,SAAS,CAACC,OAAV,GAAoB,EAAE,GAAGD,SAAS,CAACC,OAAf;AAAwB,OAAGA;AAA3B,GAApB;AAEA,SAAO,CAACX,KAAD,EAAQU,SAAR,EAAmBE,cAAnB,CAAP;AACD,CAnDM","sourcesContent":["import { getStyleAndFilteredProps } from '../theme/styled-system';\nimport { useTheme } from './useTheme';\nimport React from 'react';\nimport { useNativeBaseConfig } from '../core/NativeBaseContext';\nimport { useResponsiveQuery } from '../utils/useResponsiveQuery';\nimport { getStyledSystemPropsAndRestProps } from '../utils/getStyledSystemPropsAndRestProps';\n//@ts-ignore\nimport stableHash from 'stable-hash';\n\nexport const useStyledSystemPropsResolver = ({\n  style: propStyle,\n  debug,\n  ...props\n}: any) => {\n  const theme = useTheme();\n  const { currentBreakpoint, config } = useNativeBaseConfig(\n    'makeStyledComponent'\n  );\n  const strictMode = config.strictMode;\n\n  const { getResponsiveStyles } = useResponsiveQuery();\n\n  const { styledSystemProps, restProps } = getStyledSystemPropsAndRestProps(\n    props\n  );\n\n  const { style, dataSet, styleFromProps } = React.useMemo(() => {\n    const { styleSheet, dataSet, styleFromProps } = getStyleAndFilteredProps({\n      styledSystemProps,\n      theme,\n      debug,\n      currentBreakpoint,\n      strictMode,\n      getResponsiveStyles,\n    });\n    if (propStyle) {\n      return { style: [styleSheet.box, propStyle], dataSet, styleFromProps };\n    } else {\n      return { style: styleSheet.box, dataSet, styleFromProps };\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    stableHash(styledSystemProps),\n    theme,\n    debug,\n    currentBreakpoint,\n    strictMode,\n    propStyle,\n    getResponsiveStyles,\n    props,\n  ]);\n  if (process.env.NODE_ENV === 'development' && debug) {\n    /* eslint-disable-next-line */\n    console.log('style,resprops', currentBreakpoint);\n  }\n\n  restProps.dataSet = { ...restProps.dataSet, ...dataSet };\n\n  return [style, restProps, styleFromProps];\n};\n"]}