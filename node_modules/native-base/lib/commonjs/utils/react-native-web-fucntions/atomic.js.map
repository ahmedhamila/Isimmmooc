{"version":3,"sources":["atomic.ts"],"names":["borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","borderLeftColor","borderLeftStyle","borderLeftWidth","borderRightColor","borderRightStyle","borderRightWidth","right","marginLeft","marginRight","paddingLeft","paddingRight","left","PROPERTIES_VALUE","PROPERTIES_FLIP","PROPERTIES_I18N","borderTopStartRadius","borderTopEndRadius","borderBottomStartRadius","borderBottomEndRadius","borderStartColor","borderStartStyle","borderStartWidth","borderEndColor","borderEndStyle","borderEndWidth","end","marginStart","marginEnd","paddingStart","paddingEnd","start","customGroup","borderColor","borderRadius","borderStyle","borderWidth","display","flex","margin","overflow","overscrollBehavior","padding","marginHorizontal","marginVertical","paddingHorizontal","paddingVertical","atomicGroup","cache","Map","atomic","style","compiledStyle","$$css","compiledRules","atomicCompile","prop","value","valueString","stringifyValueWithProperty","cacheKey","cachedResult","get","identifier","push","createIdentifier","order","rules","createAtomicRules","orderedRules","set","Object","keys","sort","forEach","localizeableValue","indexOf","propPolyfill","ltr","rtl","values","Array","isArray","polyfillIndices","i","length","val","ltrPolyfillValues","rtlPolyfillValues","ltrVal","ltrPolyfill","rtlPolyfill","property","normalizedValue","JSON","stringify","prefix","name","hashedString","process","env","NODE_ENV","selector","animationNames","keyframesRules","processKeyframesValue","block","createDeclarationBlock","animationName","join","color","opacity","finalValue","pointerEvents","scrollbarWidth","domStyle","declarationsString","map","v","keyframesValue","Error","keyframes","createKeyframes","prefixes","steps","stepName","rule"],"mappings":"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","sourcesContent":["/* eslint-disable */\n//@ts-nocheck\n// This functions is taken from react native web\n\nimport hash from '../useResponsiveQuery/hash';\nimport prefixStyles from '../react-native-web-fucntions/prefixStyles';\nimport normalizeValueWithProperty from './normalizeValueWithProperty';\nimport createReactDOMStyle from '../react-native-web-fucntions/createReactDOMStyle';\nimport hyphenateStyleName from '../react-native-web-fucntions/hyphenateStyleName';\ntype Value = Object | Array<any> | string | number;\ntype Style = { [key: string]: Value };\ntype Rule = string;\ntype Rules = Array<Rule>;\ntype RulesData = [Rules, number];\ntype CompiledStyle = {\n  //@ts-ignore\n  $$css: boolean;\n  //@ts-ignore\n  $$css$localize?: boolean;\n  [key: string]: string | Array<string>;\n};\nconst borderTopLeftRadius = 'borderTopLeftRadius';\nconst borderTopRightRadius = 'borderTopRightRadius';\nconst borderBottomLeftRadius = 'borderBottomLeftRadius';\nconst borderBottomRightRadius = 'borderBottomRightRadius';\nconst borderLeftColor = 'borderLeftColor';\nconst borderLeftStyle = 'borderLeftStyle';\nconst borderLeftWidth = 'borderLeftWidth';\nconst borderRightColor = 'borderRightColor';\nconst borderRightStyle = 'borderRightStyle';\nconst borderRightWidth = 'borderRightWidth';\nconst right = 'right';\nconst marginLeft = 'marginLeft';\nconst marginRight = 'marginRight';\nconst paddingLeft = 'paddingLeft';\nconst paddingRight = 'paddingRight';\nconst left = 'left';\nconst PROPERTIES_VALUE: any = ['clear', 'float', 'textAlign'];\n// Map of LTR property names to their BiDi equivalent.\nconst PROPERTIES_FLIP: { [key: string]: string } = {\n  [borderTopLeftRadius]: borderTopRightRadius,\n  [borderTopRightRadius]: borderTopLeftRadius,\n  [borderBottomLeftRadius]: borderBottomRightRadius,\n  [borderBottomRightRadius]: borderBottomLeftRadius,\n  [borderLeftColor]: borderRightColor,\n  [borderLeftStyle]: borderRightStyle,\n  [borderLeftWidth]: borderRightWidth,\n  [borderRightColor]: borderLeftColor,\n  [borderRightStyle]: borderLeftStyle,\n  [borderRightWidth]: borderLeftWidth,\n  [left]: right,\n  [marginLeft]: marginRight,\n  [marginRight]: marginLeft,\n  [paddingLeft]: paddingRight,\n  [paddingRight]: paddingLeft,\n  [right]: left,\n};\n// Map of I18N property names to their LTR equivalent.\nconst PROPERTIES_I18N: any = {\n  borderTopStartRadius: borderTopLeftRadius,\n  borderTopEndRadius: borderTopRightRadius,\n  borderBottomStartRadius: borderBottomLeftRadius,\n  borderBottomEndRadius: borderBottomRightRadius,\n  borderStartColor: borderLeftColor,\n  borderStartStyle: borderLeftStyle,\n  borderStartWidth: borderLeftWidth,\n  borderEndColor: borderRightColor,\n  borderEndStyle: borderRightStyle,\n  borderEndWidth: borderRightWidth,\n  end: right,\n  marginStart: marginLeft,\n  marginEnd: marginRight,\n  paddingStart: paddingLeft,\n  paddingEnd: paddingRight,\n  start: left,\n};\ntype CompilerOutput = [CompiledStyle, Array<RulesData>];\nconst customGroup: { [key: string]: number } = {\n  borderColor: 2,\n  borderRadius: 2,\n  borderStyle: 2,\n  borderWidth: 2,\n  display: 2,\n  flex: 2,\n  margin: 2,\n  overflow: 2,\n  overscrollBehavior: 2,\n  padding: 2,\n  marginHorizontal: 2.1,\n  marginVertical: 2.1,\n  paddingHorizontal: 2.1,\n  paddingVertical: 2.1,\n};\nconst atomicGroup = 2.2;\nconst cache = new Map();\nexport function atomic(style: Style): CompilerOutput {\n  //@ts-ignore\n  const compiledStyle: CompiledStyle = { $$css: true };\n  const compiledRules: any = [];\n\n  function atomicCompile(prop: any, value: any) {\n    const valueString = stringifyValueWithProperty(value, prop);\n    const cacheKey = prop + valueString;\n    const cachedResult = cache.get(cacheKey);\n    let identifier;\n    if (cachedResult != null) {\n      identifier = cachedResult[0];\n      compiledRules.push(cachedResult[1]);\n    } else {\n      identifier = createIdentifier('r', prop, value);\n      const order = customGroup[prop] || atomicGroup;\n      const rules = createAtomicRules(identifier, prop, value);\n      const orderedRules = [rules, order];\n      compiledRules.push(orderedRules);\n      cache.set(cacheKey, [identifier, orderedRules]);\n    }\n    return identifier;\n  }\n\n  Object.keys(style)\n    .sort()\n    .forEach((prop) => {\n      const value = style[prop];\n      if (value != null) {\n        let localizeableValue;\n        // BiDi flip values\n        if (PROPERTIES_VALUE.indexOf(prop) > -1) {\n          const left = atomicCompile(prop, 'left');\n          const right = atomicCompile(prop, 'right');\n          if (value === 'start') {\n            localizeableValue = [left, right];\n          } else if (value === 'end') {\n            localizeableValue = [right, left];\n          }\n        }\n        // BiDi flip properties\n        const propPolyfill = PROPERTIES_I18N[prop];\n        if (propPolyfill != null) {\n          const ltr = atomicCompile(propPolyfill, value);\n          const rtl = atomicCompile(PROPERTIES_FLIP[propPolyfill], value);\n          localizeableValue = [ltr, rtl];\n        }\n        // BiDi flip transitionProperty value\n        if (prop === 'transitionProperty') {\n          const values = Array.isArray(value) ? value : [value];\n          const polyfillIndices = [];\n\n          for (let i = 0; i < values.length; i++) {\n            const val = values[i];\n            if (typeof val === 'string' && PROPERTIES_I18N[val] != null) {\n              polyfillIndices.push(i);\n            }\n          }\n\n          if (polyfillIndices.length > 0) {\n            const ltrPolyfillValues = [...values];\n            const rtlPolyfillValues = [...values];\n            polyfillIndices.forEach((i) => {\n              const ltrVal = ltrPolyfillValues[i];\n              if (typeof ltrVal === 'string') {\n                const ltrPolyfill = PROPERTIES_I18N[ltrVal];\n                const rtlPolyfill = PROPERTIES_FLIP[ltrPolyfill];\n                ltrPolyfillValues[i] = ltrPolyfill;\n                rtlPolyfillValues[i] = rtlPolyfill;\n                const ltr = atomicCompile(prop, ltrPolyfillValues);\n                const rtl = atomicCompile(prop, rtlPolyfillValues);\n                localizeableValue = [ltr, rtl];\n              }\n            });\n          }\n        }\n\n        if (localizeableValue == null) {\n          localizeableValue = atomicCompile(prop, value);\n        } else {\n          compiledStyle['$$css$localize'] = true;\n        }\n\n        compiledStyle[prop] = localizeableValue;\n      }\n    });\n\n  return [compiledStyle, compiledRules];\n}\n\n/**\n * Create a value string that normalizes different input values with a common\n * output.\n */\nexport function stringifyValueWithProperty(\n  value: Value,\n  property?: string\n): string {\n  // e.g., 0 => '0px', 'black' => 'rgba(0,0,0,1)'\n  const normalizedValue = normalizeValueWithProperty(value, property);\n  return typeof normalizedValue !== 'string'\n    ? JSON.stringify(normalizedValue || '')\n    : normalizedValue;\n}\n\n/**\n * An identifier is associated with a unique set of styles.\n */\nfunction createIdentifier(prefix: string, name: string, value: Value): string {\n  const hashedString = hash(name + stringifyValueWithProperty(value, name));\n  return process.env.NODE_ENV !== 'production'\n    ? `${prefix}-${name}-${hashedString}`\n    : `${prefix}-${hashedString}`;\n}\n\n/**\n * Create the Atomic CSS rules needed for a given StyleSheet rule.\n * Translates StyleSheet declarations to CSS.\n */\nfunction createAtomicRules(\n  identifier: string,\n  property: any,\n  value: any\n): Rules {\n  const rules = [];\n  const selector = `.${identifier}`;\n\n  // Handle non-standard properties and object values that require multiple\n  // CSS rules to be created.\n  switch (property) {\n    case 'animationKeyframes': {\n      const [animationNames, keyframesRules] = processKeyframesValue(value);\n      const block = createDeclarationBlock({\n        animationName: animationNames.join(','),\n      });\n      rules.push(`${selector}${block}`, ...keyframesRules);\n      break;\n    }\n\n    // Equivalent to using '::placeholder'\n    case 'placeholderTextColor': {\n      const block = createDeclarationBlock({ color: value, opacity: 1 });\n      rules.push(\n        `${selector}::-webkit-input-placeholder${block}`,\n        `${selector}::-moz-placeholder${block}`,\n        `${selector}:-ms-input-placeholder${block}`,\n        `${selector}::placeholder${block}`\n      );\n      break;\n    }\n\n    // Polyfill for additional 'pointer-events' values\n    // See d13f78622b233a0afc0c7a200c0a0792c8ca9e58\n    case 'pointerEvents': {\n      let finalValue = value;\n      if (value === 'auto' || value === 'box-only') {\n        finalValue = 'auto!important';\n        if (value === 'box-only') {\n          const block = createDeclarationBlock({ pointerEvents: 'none' });\n          rules.push(`${selector}>*${block}`);\n        }\n      } else if (value === 'none' || value === 'box-none') {\n        finalValue = 'none!important';\n        if (value === 'box-none') {\n          const block = createDeclarationBlock({ pointerEvents: 'auto' });\n          rules.push(`${selector}>*${block}`);\n        }\n      }\n      const block = createDeclarationBlock({ pointerEvents: finalValue });\n      rules.push(`${selector}${block}`);\n      break;\n    }\n\n    // Polyfill for draft spec\n    // https://drafts.csswg.org/css-scrollbars-1/\n    case 'scrollbarWidth': {\n      if (value === 'none') {\n        rules.push(`${selector}::-webkit-scrollbar{display:none}`);\n      }\n      const block = createDeclarationBlock({ scrollbarWidth: value });\n      rules.push(`${selector}${block}`);\n      break;\n    }\n\n    default: {\n      const block = createDeclarationBlock({ [property]: value });\n      rules.push(`${selector}${block}`);\n      break;\n    }\n  }\n\n  return rules;\n}\n\n/**\n * Creates a CSS declaration block from a StyleSheet object.\n */\nfunction createDeclarationBlock(style: Style): string {\n  const domStyle: any = prefixStyles(createReactDOMStyle(style));\n  const declarationsString = Object.keys(domStyle)\n    .map((property) => {\n      const value = domStyle[property];\n      const prop = hyphenateStyleName(property);\n      // The prefixer may return an array of values:\n      // { display: [ '-webkit-flex', 'flex' ] }\n      // to represent \"fallback\" declarations\n      // { display: -webkit-flex; display: flex; }\n      if (Array.isArray(value)) {\n        return value.map((v) => `${prop}:${v}`).join(';');\n      } else {\n        return `${prop}:${value}`;\n      }\n    })\n    // Once properties are hyphenated, this will put the vendor\n    // prefixed and short-form properties first in the list.\n    .sort()\n    .join(';');\n\n  return `{${declarationsString};}`;\n}\n\n/**\n * Create CSS keyframes rules and names from a StyleSheet keyframes object.\n */\nfunction processKeyframesValue(keyframesValue: any) {\n  if (typeof keyframesValue === 'number') {\n    throw new Error(`Invalid CSS keyframes type: ${typeof keyframesValue}`);\n  }\n\n  const animationNames: any = [];\n  const rules: any = [];\n  const value = Array.isArray(keyframesValue)\n    ? keyframesValue\n    : [keyframesValue];\n\n  value.forEach((keyframes) => {\n    if (typeof keyframes === 'string') {\n      // Support external animation libraries (identifiers only)\n      animationNames.push(keyframes);\n    } else {\n      // Create rules for each of the keyframes\n      const [identifier, keyframesRules] = createKeyframes(keyframes);\n      animationNames.push(identifier);\n      rules.push(...keyframesRules);\n    }\n  });\n\n  return [animationNames, rules];\n}\n\n/**\n * Create individual CSS keyframes rules.\n */\nfunction createKeyframes(keyframes: any): [string, Rules] {\n  const prefixes = ['-webkit-', ''];\n  const identifier = createIdentifier('r', 'animation', keyframes);\n\n  const steps =\n    '{' +\n    Object.keys(keyframes)\n      .map((stepName) => {\n        const rule = keyframes[stepName];\n        const block = createDeclarationBlock(rule);\n        return `${stepName}${block}`;\n      })\n      .join('') +\n    '}';\n\n  const rules = prefixes.map((prefix) => {\n    return `@${prefix}keyframes ${identifier}${steps}`;\n  });\n  return [identifier, rules];\n}\n"]}