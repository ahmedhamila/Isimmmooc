{"version":3,"sources":["component.tsx"],"names":["Factory","Component","componentTheme","React","forwardRef","children","_state","props","ref","StyledComponent","calculatedProps"],"mappings":";;;;;;;AAAA;;AACA;;AAGA;;;;;;;;AAEe,SAASA,OAAT,CACbC,SADa,EAEbC,cAFa,EAGb;AACA,sBAAOC,eAAMC,UAAN,CACL,CAAC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,MAAZ;AAAoB,OAAGC;AAAvB,GAAD,EAA4DC,GAA5D,KAAyE;AACvE,UAAMC,eAAe,GAAG,oBAAQ,MAAM,iCAAoBR,SAApB,CAAd,EAA8C,EAA9C,CAAxB;AACA,UAAMS,eAAe,GAAG,4DACtBR,cADsB,aACtBA,cADsB,cACtBA,cADsB,GACJ,EADI,EAEtBK,KAFsB,EAGtBD,MAHsB,CAAxB;AAKA,wBACE,6BAAC,eAAD,eAAsBI,eAAtB;AAA6C,MAAA,GAAG,EAAEF;AAAlD,QACGH,QADH,CADF;AAKD,GAbI,CAAP;AAeD","sourcesContent":["import React, { useMemo } from 'react';\nimport { usePropsWithComponentTheme } from '../hooks/useThemeProps/usePropsWithComponentTheme';\nimport type { ComponentTheme } from '../theme';\nimport type { FactoryComponentProps } from './types';\nimport { makeStyledComponent } from '../utils/styled';\n\nexport default function Factory<P>(\n  Component: React.ComponentType<P>,\n  componentTheme?: ComponentTheme\n) {\n  return React.forwardRef(\n    ({ children, _state, ...props }: P & FactoryComponentProps, ref: any) => {\n      const StyledComponent = useMemo(() => makeStyledComponent(Component), []);\n      const calculatedProps = usePropsWithComponentTheme(\n        componentTheme ?? {},\n        props,\n        _state\n      );\n      return (\n        <StyledComponent {...(calculatedProps as P)} ref={ref}>\n          {children}\n        </StyledComponent>\n      );\n    }\n  );\n}\n"]}