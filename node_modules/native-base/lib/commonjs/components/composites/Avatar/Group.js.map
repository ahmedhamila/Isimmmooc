{"version":3,"sources":["Group.tsx"],"names":["getAvatarGroupChildren","children","space","max","_hiddenAvatarPlaceholder","_avatar","isVertical","childrenArray","React","Children","toArray","plusAvatars","length","slice","spacingProps","ml","mt","map","reverse","child","index","cloneElement","key","props","AvatarGroup","ref","resolvedProps"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;;;;;;;;;AAEA;AAEA,MAAMA,sBAAsB,GAAG,CAC7BC,QAD6B,EAE7BC,KAF6B,EAG7BC,GAH6B,EAI7BC,wBAJ6B,EAK7BC,OAL6B,EAM7BC,UAN6B,KAO1B;AACH,MAAIC,aAAkB,GAAGC,eAAMC,QAAN,CAAeC,OAAf,CAAuBT,QAAvB,CAAzB;;AACA,MAAIU,WAAmB,GAAG,CAA1B;;AACA,MAAI,CAAC,qBAAMR,GAAN,CAAD,IAAeA,GAAG,GAAGI,aAAa,CAACK,MAAnC,IAA6CT,GAAG,GAAG,CAAvD,EAA0D;AACxDQ,IAAAA,WAAW,GAAGJ,aAAa,CAACK,MAAd,GAAuBT,GAArC;AACAI,IAAAA,aAAa,GAAGA,aAAa,CAACM,KAAd,CAAoB,CAApB,EAAuBV,GAAvB,CAAhB;AACD;;AACD,QAAMW,YAAY,GAAG;AACnBC,IAAAA,EAAE,EAAET,UAAU,GAAG,CAAH,GAAOJ,KADF;AAEnBc,IAAAA,EAAE,EAAEV,UAAU,GAAGJ,KAAH,GAAW;AAFN,GAArB;AAIA,SAAO,CACLS,WAAW,GAAG,CAAd,gBACE,6BAAC,eAAD;AACE,IAAA,GAAG,EAAC;AADN,KAEMG,YAFN,EAGMT,OAHN,EAIMD,wBAJN,GAMG,OAAOO,WANV,CADF,GASI,IAVC,EAWLH,eAAMC,QAAN,CAAeQ,GAAf,CAAmBV,aAAa,CAACW,OAAd,EAAnB,EAA4C,CAACC,KAAD,EAAaC,KAAb,KAA+B;AACzE,wBAAOZ,eAAMa,YAAN,CACLF,KADK,EAEL;AACEG,MAAAA,GAAG,+BAAwBF,KAAxB,CADL;AAEE,SAAGf,OAFL;AAGE,SAAGS,YAHL;AAIE,SAAGK,KAAK,CAACI;AAJX,KAFK,EAQLJ,KAAK,CAACI,KAAN,CAAYtB,QARP,CAAP;AAUD,GAXD,CAXK,CAAP;AAwBD,CA1CD;;AA4CA,MAAMuB,WAAW,GAAG,CAAC;AAAEvB,EAAAA,QAAF;AAAY,KAAGsB;AAAf,CAAD,EAA4CE,GAA5C,KAAyD;AAC3E,QAAM;AACJtB,IAAAA,GADI;AAEJE,IAAAA,OAFI;AAGJD,IAAAA,wBAHI;AAIJE,IAAAA,UAJI;AAKJJ,IAAAA,KALI;AAMJ,OAAGwB;AANC,MAOF,uCAAmB,aAAnB,EAAkCH,KAAlC,CAPJ,CAD2E,CAU3E;;AACA,MAAI,kDAAsBA,KAAtB,CAAJ,EAAkC;AAChC,WAAO,IAAP;AACD;;AACD,sBACE,6BAAC,YAAD,eAASG,aAAT;AAAwB,IAAA,GAAG,EAAED;AAA7B,MACGzB,sBAAsB,CACrBC,QADqB,EAErBC,KAFqB,EAGrBC,GAHqB,EAIrBC,wBAJqB,EAKrBC,OALqB,EAMrBC,UANqB,CADzB,CADF;AAYD,CA1BD;;4BA4Be,+BAAK,uBAAWkB,WAAX,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Box from '../../primitives/Box';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport isNil from 'lodash.isnil';\nimport type { IAvatarGroupProps } from './types';\nimport { default as Avatar } from './Avatar';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\n// Todo: Try using HStack instead\n\nconst getAvatarGroupChildren = (\n  children?: JSX.Element[] | JSX.Element,\n  space?: number,\n  max?: number,\n  _hiddenAvatarPlaceholder?: Object,\n  _avatar?: any,\n  isVertical?: Boolean\n) => {\n  let childrenArray: any = React.Children.toArray(children);\n  let plusAvatars: number = 0;\n  if (!isNil(max) && max < childrenArray.length && max > 0) {\n    plusAvatars = childrenArray.length - max;\n    childrenArray = childrenArray.slice(0, max);\n  }\n  const spacingProps = {\n    ml: isVertical ? 0 : space,\n    mt: isVertical ? space : 0,\n  };\n  return [\n    plusAvatars > 0 ? (\n      <Avatar\n        key=\"avatar-group-wrapper\"\n        {...spacingProps}\n        {..._avatar}\n        {..._hiddenAvatarPlaceholder}\n      >\n        {'+ ' + plusAvatars}\n      </Avatar>\n    ) : null,\n    React.Children.map(childrenArray.reverse(), (child: any, index: number) => {\n      return React.cloneElement(\n        child,\n        {\n          key: `avatar-group-child-${index}`,\n          ..._avatar,\n          ...spacingProps,\n          ...child.props,\n        },\n        child.props.children\n      );\n    }),\n  ];\n};\n\nconst AvatarGroup = ({ children, ...props }: IAvatarGroupProps, ref: any) => {\n  const {\n    max,\n    _avatar,\n    _hiddenAvatarPlaceholder,\n    isVertical,\n    space,\n    ...resolvedProps\n  } = usePropsResolution('AvatarGroup', props);\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Box {...resolvedProps} ref={ref}>\n      {getAvatarGroupChildren(\n        children,\n        space,\n        max,\n        _hiddenAvatarPlaceholder,\n        _avatar,\n        isVertical\n      )}\n    </Box>\n  );\n};\n\nexport default memo(forwardRef(AvatarGroup));\n"]}