{"version":3,"sources":["ActionsheetContent.tsx"],"names":["Content","hideDragIndicator","children","handleClose","pan","sheetHeight","props","ref","_dragIndicator","_dragIndicatorWrapperOffSet","_dragIndicatorWrapper","resolvedProps","handleCloseRef","React","useRef","handleCloseCallback","useCallback","handleCloseCurrent","current","useEffect","panResponder","PanResponder","create","onStartShouldSetPanResponder","onMoveShouldSetPanResponder","_evt","gestureState","dy","onPanResponderMove","e","Animated","event","y","useNativeDriver","onPanResponderRelease","_e","timing","toValue","x","duration","start","setTimeout","spring","overshootClamping","panHandlers","ActionsheetContent","useContext","ModalContext","ActionSheetContext","ValueXY","transform","translateY","width","height","nativeEvent","layout"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Modal } from '../../composites/Modal';\nimport type { IActionsheetContentProps } from './types';\nimport { usePropsResolution } from '../../../hooks';\nimport { Animated, PanResponder } from 'react-native';\nimport { ModalContext } from '../Modal/Context';\nimport Box from '../../primitives/Box';\nimport { ActionSheetContext } from './ActionSheetContext';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Content = memo(\n  forwardRef(\n    (\n      {\n        hideDragIndicator,\n        children,\n        handleClose,\n        pan,\n        sheetHeight,\n        ...props\n      }: any,\n      ref: any\n    ) => {\n      const {\n        _dragIndicator,\n        _dragIndicatorWrapperOffSet,\n        _dragIndicatorWrapper,\n        ...resolvedProps\n      } = usePropsResolution('ActionsheetContent', props);\n\n      const handleCloseRef = React.useRef(null);\n      const handleCloseCallback = React.useCallback(() => {\n        let handleCloseCurrent = handleCloseRef.current;\n        //@ts-ignore\n        return handleCloseCurrent();\n      }, []);\n      React.useEffect(() => {\n        handleCloseRef.current = handleClose;\n      }, [handleClose]);\n\n      const panResponder = React.useRef(\n        PanResponder.create({\n          onStartShouldSetPanResponder: () => true,\n          onMoveShouldSetPanResponder: (_evt, gestureState) => {\n            return gestureState.dy > 15;\n          },\n          onPanResponderMove: (e, gestureState) => {\n            if (gestureState.dy > 0) {\n              Animated.event([null, { dy: pan.y }], {\n                useNativeDriver: false,\n              })(e, gestureState);\n            }\n          },\n          onPanResponderRelease: (_e, gestureState) => {\n            // If sheet is dragged 1/4th of it's height, close it\n            if (sheetHeight.current / 4 - gestureState.dy < 0) {\n              Animated.timing(pan, {\n                toValue: { x: 0, y: sheetHeight.current },\n                duration: 150,\n                useNativeDriver: true,\n              }).start(handleCloseCallback);\n\n              setTimeout(() => {\n                Animated.timing(pan, {\n                  toValue: { x: 0, y: 0 },\n                  duration: 150,\n                  useNativeDriver: true,\n                }).start();\n              }, 300);\n            } else {\n              Animated.spring(pan, {\n                toValue: { x: 0, y: 0 },\n                overshootClamping: true,\n                useNativeDriver: true,\n              }).start();\n            }\n          },\n        })\n      ).current;\n\n      return (\n        <>\n          {!hideDragIndicator ? (\n            <>\n              {/* To increase the draggable area */}\n              <Box\n                {...panResponder.panHandlers}\n                {..._dragIndicatorWrapperOffSet}\n              />\n            </>\n          ) : null}\n\n          <Modal.Content {...resolvedProps} ref={ref} safeAreaBottom>\n            {!hideDragIndicator ? (\n              <>\n                {/* Hack. Fix later. Add -2 negative margin to remove the padding added by ActionSheetContent */}\n                <Box {...panResponder.panHandlers} {..._dragIndicatorWrapper}>\n                  <Box {..._dragIndicator} />\n                </Box>\n              </>\n            ) : null}\n\n            {children}\n          </Modal.Content>\n        </>\n      );\n    }\n  )\n);\nconst ActionsheetContent = (\n  { children, ...props }: IActionsheetContentProps,\n  ref?: any\n) => {\n  // return null;\n  const { handleClose } = React.useContext(ModalContext);\n  const { hideDragIndicator } = React.useContext(ActionSheetContext);\n  const pan = React.useRef(new Animated.ValueXY()).current;\n  const sheetHeight = React.useRef(0);\n\n  const handleCloseCallback = React.useCallback(handleClose, [\n    ModalContext,\n    handleClose,\n  ]);\n\n  // useEffect(() => {\n\n  // }, [])\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return (\n    <Animated.View\n      style={{\n        transform: [{ translateY: pan.y }],\n        width: '100%',\n      }}\n      onLayout={(event) => {\n        const { height } = event.nativeEvent.layout;\n        sheetHeight.current = height;\n      }}\n      pointerEvents=\"box-none\"\n    >\n      <Content\n        children={children}\n        sheetHeight={sheetHeight}\n        pan={pan}\n        hideDragIndicator={hideDragIndicator}\n        handleClose={handleCloseCallback}\n        ref={ref}\n        {...props}\n      />\n    </Animated.View>\n  );\n};\n\nexport default memo(forwardRef(ActionsheetContent));\n"]}